---
- hosts: localhost
  user: "{{ linuxUser }}"
  vars:
    node_name: "{{ hostname}}.{{ zone }}"
  tasks:
    - name: Create or remove an instace in OpenStack/Cisco Cloud
      local_action:
        module: nova_compute
        security_groups: "{{ security_groups }}"
        name: "{{ node_name }}"
        image_name: "{{ image_name }}"
        key_name: "{{ key_name }}"
        floating_ip_pools: "{{ floating_ip_pools }}"
        wait_for: 400
        nics: [ net-id: "{{ network_id }}" ]
        flavor_id: "{{ flavor_id }}"
        state: "{{ instance_state }}"
      register: openstack
      tags: launch-ccs-instance
    - name: Wait for SSH to come up
      local_action:
        module: wait_for
        host: "{{ openstack.public_ip | join('') }}"
        port: 22
      when: instance_state == "present"
      tags: launch-ccs-instance
    - name: Add host to inventory
      add_host:
        name: "{{ node_name }}"
        ansible_ssh_host: "{{ openstack.public_ip | join('') }}"
        groups: just_created
      tags: launch-ccs-instance
      when: instance_state == "present"
- hosts: just_created
  user: "{{ linuxUser }}"
  sudo: yes
  pre_tasks:
    - name: Install packages
      apt:
        name: "{{ item }}"
        update_cache: yes
        cache_valid_time: 3600
      with_items:
        - git
    - name: copy the sudoers file so we can do agent forwarding
      copy:
        src: files/99-keep-ssh-auth-sock-env
        dest: /etc/sudoers.d/99-keep-ssh-auth-sock-env
        owner: root
        group: root
        mode: "0440"
        validate: visudo -cf %s
    - name: Clone devdocs repo
      git:
        repo: git@github.com:CiscoDevNet/devdocs.git
        dest: "/home/{{ linuxUser }}/devdocs"
        accept_hostkey: yes
    - name: chmod devdocs repo
      file:
        path: "/home/{{ linuxUser }}/devdocs"
        state: directory
        recurse: yes
        owner: "{{ linuxUser }}"
        group: "{{ linuxUser }}"
  roles:
    - role: ANXS.nodejs
      nodejs_version: "0.12.7"
      nodejs_install_method: "binary"
  post_tasks:
    - name: Install node packages
      npm:
        name: "{{ item }}"
        global: yes
      with_items:
        - yo
        - bower
        - grunt-cli
    - name: Import mongo public key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: 7F0CEB10
    - name: Add mongo apt repo
      apt_repository:
        repo: "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.0 multiverse"
    - name: Install mongo db packages
      apt:
        name: mongodb-org
        update_cache: yes
    - name: Start mongo db
      service:
        name: mongod
        state: started
    - name: Run bower install devdocs
      bower:
        path: "/home/{{ linuxUser }}/devdocs"
    - name: Run npm install in devdocs
      npm:
        path: "/home/{{ linuxUser }}/devdocs"
